import React, { Component } from 'react';
import { Field, reduxForm } from 'redux-form';

class PostsNew extends Component {
    renderField(field) {
        return (
            <div className="form-group">
                <label>{ field.label }</label>
                <input 
                    className="form-control"
                    type="text"
                    {...field.input}
                />
            </div>
        )
    }

    // The Field component which we are using to specify an input inside of 
    // this component
    render() {
        return (
            <form>
                <Field
                    label="Title"
                    name="title"
                    component={this.renderField}
                />
                <Field
                    label="Tags"
                    name="tags"
                    component={this.renderField}
                />
                <Field 
                    label="Post Content"
                    name="content"
                    component={this.renderField}
                />
            </form>
        );
    }
}

// reduxForm is very similar to connect function from react-redux library
// we use reduxForm helper to wrap the postsNew component, by doing so,
// we gave reduxForm the ability to communicate directly from this component
// to the reducer that we wired up.

// The form property below is used to specify a kind of namespace of sorts, 
// for all the state that is going to be generated by this particular component.
// the only requirement for the form property is that it's unique, and the only 
// needs to be unique if you want this form to essentially live in isolation and 
// not share any of its state with any other forms
export default reduxForm({
    form: 'PostsNewForm'
})(PostsNew);